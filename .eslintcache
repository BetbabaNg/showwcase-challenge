[{"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\index.js":"1","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\globalStyles.js":"2","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\HomePage\\Data.js":"3","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\components\\homeSection\\homeSection.js":"4","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\components\\mainSection\\mainSection.elements.js":"5","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\common\\modal\\modal.js":"6","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\notFound.js":"7","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\components\\mainSection\\mainSection.js":"8","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\HomePage\\Home.js":"9","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\MainPage\\Main.js":"10"},{"size":197,"mtime":1606426147482,"results":"11","hashOfConfig":"12"},{"size":1119,"mtime":1606422680781,"results":"13","hashOfConfig":"12"},{"size":76,"mtime":1606423403040,"results":"14","hashOfConfig":"12"},{"size":2759,"mtime":1606454566318,"results":"15","hashOfConfig":"12"},{"size":4963,"mtime":1606422180808,"results":"16","hashOfConfig":"12"},{"size":7174,"mtime":1606426133280,"results":"17","hashOfConfig":"12"},{"size":455,"mtime":1606426073849,"results":"18","hashOfConfig":"12"},{"size":8599,"mtime":1606454338767,"results":"19","hashOfConfig":"12"},{"size":240,"mtime":1606453582844,"results":"20","hashOfConfig":"12"},{"size":275,"mtime":1606454481762,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xn1qcc",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\index.js",[],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\globalStyles.js",[],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\HomePage\\Data.js",[],["44","45"],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\components\\homeSection\\homeSection.js",["46","47"],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\components\\mainSection\\mainSection.elements.js",[],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\common\\modal\\modal.js",[],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\notFound.js",[],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\components\\mainSection\\mainSection.js",["48","49","50"],"import React, { useState } from \"react\";\r\n\r\nimport Joi from \"joi-browser\";\r\nimport ModalUtil from \"../../common/modal/modal\";\r\nimport {\r\n  getProfileByName,\r\n  getProfileBySchool,\r\n  postEducationProfile,\r\n} from \"../../pages/MainPage/Data\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons\";\r\nimport {\r\n  Navbar,\r\n  MenuBar,\r\n  Nav,\r\n  NavMenuItems,\r\n  NavBarToggle,\r\n  NavLinkItem,\r\n  MenuBars,\r\n  NavText,\r\n  Button,\r\n  SpanElement,\r\n  UserContainer,\r\n  UserIntroduction,\r\n  UserSubHeading,\r\n  UserEducationContent,\r\n  UserEducationWrapper,\r\n  UserTitle,\r\n  UserSubTitle,\r\n  UserEducationItems,\r\n  UserNoProfile,\r\n  UserProfileInfo,\r\n  Img,\r\n} from \"../../components/mainSection/mainSection.elements\";\r\nimport noProfileImg from \"../../images/undraw_No_data_re_kwbl.svg\";\r\n\r\nconst MainSec = (data) => {\r\n  console.log(data);\r\n  let education, schools;\r\n\r\n  const { data: details, user } = data;\r\n\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    degree: \"\",\r\n    fieldOfStudy: \"\",\r\n    startYear: \"\",\r\n    endYear: \"\",\r\n    grade: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const [autoData, setAutoData] = useState(\"\");\r\n\r\n  const [errors, setErrors] = useState({ errors: \"\" });\r\n\r\n  const [serverMsg, setServerMsg] = useState(\"\");\r\n\r\n  const schema = {\r\n    degree: Joi.string().required().label(\"Degree\"),\r\n    fieldOfStudy: Joi.string().required().label(\"Field of Study\"),\r\n    startYear: Joi.string().required().label(\"Start Year\"),\r\n    endYear: Joi.string().required().label(\"End Year\"),\r\n    grade: Joi.string().required().label(\"Grade\"),\r\n    description: Joi.string().required().label(\"Description\"),\r\n  };\r\n\r\n  const validate = () => {\r\n    const options = { abortEarly: false };\r\n    const result = Joi.validate(values, schema, options);\r\n    const { error } = result;\r\n    const errors = {};\r\n\r\n    if (!error) return null;\r\n\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const fieldSchema = { [name]: schema[name] };\r\n    const result = Joi.validate(obj, fieldSchema);\r\n    return result ? result.message : null;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.persist();\r\n    const { name, value } = e.target;\r\n    console.log(name);\r\n\r\n    const errorMessage = validateProperty(e.target);\r\n    console.log(errorMessage);\r\n\r\n    if (errorMessage) errors[name] = errorMessage;\r\n    else delete errors[name];\r\n\r\n    setValues((prevUser) => ({ ...prevUser, [name]: value }));\r\n    setErrors({ ...errors, [errors]: errorMessage });\r\n    setServerMsg(\"\");\r\n  };\r\n\r\n  const handleAutoComplete = (value) => {\r\n    const school = { school: value };\r\n    setAutoData(school);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let counter;\r\n\r\n    const errors = validate();\r\n    setErrors({ ...errors, [errors]: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    const result = getProfileByName(user.name);\r\n    const { school } = autoData;\r\n\r\n    if (result.length > 0) {\r\n      counter = result.length + 1;\r\n    } else {\r\n      counter = 1;\r\n    }\r\n    try {\r\n      const data = { id: counter, school: school, user: user.name, ...values };\r\n      const response = postEducationProfile(data);\r\n\r\n      setServerMsg(\"Education Profile Saved\");\r\n    } catch (error) {\r\n      setServerMsg(\"Some problems were encountered\");\r\n    }\r\n  };\r\n\r\n  const populateEducation = (name) => {\r\n    return getProfileByName(name);\r\n  };\r\n\r\n  const populateEducationProfile = (school) => {\r\n    return getProfileBySchool(school);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setIsOpen(!isOpen);\r\n    setValues({\r\n      degree: \"\",\r\n      fieldOfStudy: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n      grade: \"\",\r\n      description: \"\",\r\n    });\r\n    setServerMsg(\"\");\r\n  };\r\n\r\n  const showSideBar = () => {\r\n    setSidebar(!sidebar);\r\n  };\r\n\r\n  switch (details.path) {\r\n    case \"/Main/:name/:education\":\r\n      education = populateEducationProfile(details.params.education);\r\n      schools = populateEducation(details.params.name);\r\n      break;\r\n\r\n    case \"/Main/:name\":\r\n      schools = populateEducation(details.params.name);\r\n      education = schools;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Navbar>\r\n          <MenuBar to=\"#\" onClick={showSideBar}>\r\n            <FaIcons.FaBars onClick={showSideBar}></FaIcons.FaBars>\r\n          </MenuBar>\r\n        </Navbar>\r\n        {schools.length > 0 ? (\r\n          <Nav active={sidebar} click={sidebar}>\r\n            <NavMenuItems onClick={showSideBar}>\r\n              <NavBarToggle>\r\n                <MenuBars to=\"#\">SHOWCASE</MenuBars>\r\n              </NavBarToggle>\r\n              <NavMenuItems>\r\n                {schools.map((item, index) => {\r\n                  return (\r\n                    <NavText>\r\n                      <NavLinkItem to={`/Main/${user.name}/${item.school}`}>\r\n                        <FaIcons.FaEnvelopeOpenText />\r\n                        <SpanElement>{item.school}</SpanElement>\r\n                      </NavLinkItem>\r\n                    </NavText>\r\n                  );\r\n                })}\r\n                <NavText>\r\n                  <NavLinkItem to=\"/\">\r\n                    <FaIcons.FaPowerOff />\r\n                    <SpanElement>Exit</SpanElement>\r\n                  </NavLinkItem>\r\n                </NavText>\r\n              </NavMenuItems>\r\n            </NavMenuItems>\r\n          </Nav>\r\n        ) : (\r\n          <Nav active={!sidebar} click={!sidebar}>\r\n            <NavMenuItems onClick={showSideBar} active={true}>\r\n              <NavBarToggle>\r\n                <MenuBars to=\"#\">SHOWCASE</MenuBars>\r\n              </NavBarToggle>\r\n              <NavMenuItems>\r\n                <NavText>\r\n                  <NavLinkItem to=\"/\">\r\n                    <FaIcons.FaPowerOff />\r\n                    <SpanElement>Exit</SpanElement>\r\n                  </NavLinkItem>\r\n                </NavText>\r\n              </NavMenuItems>\r\n            </NavMenuItems>\r\n          </Nav>\r\n        )}\r\n\r\n        <UserContainer>\r\n          <UserIntroduction>\r\n            <UserSubHeading>\r\n              Welcome to {`${user.name}'s`} education page\r\n            </UserSubHeading>\r\n            <Button big fontBig primary onClick={toggleModal}>\r\n              {`Add New Education`}\r\n            </Button>\r\n            <UserEducationContent>\r\n              {education.length > 0 ? (\r\n                education.map((item, index) => {\r\n                  return (\r\n                    <UserEducationWrapper>\r\n                      <UserTitle>{item.school}</UserTitle>\r\n                      <UserSubTitle>{`${item.startYear} - ${item.endYear}`}</UserSubTitle>\r\n                      <UserEducationItems>\r\n                        <li>\r\n                          <FaIcons.FaCheck size={15}></FaIcons.FaCheck>{\" \"}\r\n                          {`${item.degree} in ${item.fieldOfStudy}`}\r\n                        </li>\r\n                        <li>\r\n                          <FaIcons.FaCheck size={15}></FaIcons.FaCheck>{\" \"}\r\n                          {`${item.grade}`}\r\n                        </li>\r\n                        <li>\r\n                          <FaIcons.FaCheck size={15}></FaIcons.FaCheck>{\" \"}\r\n                          {`${item.description}`}\r\n                        </li>\r\n                      </UserEducationItems>\r\n                    </UserEducationWrapper>\r\n                  );\r\n                })\r\n              ) : (\r\n                <UserEducationWrapper>\r\n                  <UserNoProfile>\r\n                    <UserProfileInfo>\r\n                      No Educational Profile Created\r\n                    </UserProfileInfo>\r\n                    <Img src={noProfileImg}></Img>\r\n                  </UserNoProfile>\r\n                </UserEducationWrapper>\r\n              )}\r\n            </UserEducationContent>\r\n          </UserIntroduction>\r\n        </UserContainer>\r\n        <ModalUtil\r\n          values={values}\r\n          handleAutoComplete={handleAutoComplete}\r\n          serverMsg={serverMsg}\r\n          errors={errors}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmit}\r\n          validate={validate}\r\n          isOpen={isOpen}\r\n          toggleModal={toggleModal}\r\n        ></ModalUtil>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainSec;\r\n","C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\HomePage\\Home.js",["51"],"C:\\Users\\HTS PC 3\\Desktop\\showwcase-challenge\\src\\pages\\MainPage\\Main.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":14},{"ruleId":"56","severity":1,"message":"60","line":15,"column":18,"nodeType":"58","messageId":"59","endLine":15,"endColumn":27},{"ruleId":"56","severity":1,"message":"61","line":11,"column":13,"nodeType":"58","messageId":"59","endLine":11,"endColumn":20},{"ruleId":"56","severity":1,"message":"62","line":135,"column":13,"nodeType":"58","messageId":"59","endLine":135,"endColumn":21},{"ruleId":"63","severity":1,"message":"64","line":168,"column":3,"nodeType":"65","messageId":"66","endLine":178,"endColumn":4},{"ruleId":"56","severity":1,"message":"67","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":20},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'AiIcons' is defined but never used.","'response' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'homeObjOne' is defined but never used.","no-global-assign","no-unsafe-negation"]